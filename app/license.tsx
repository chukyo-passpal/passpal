/**
 * This file is auto-generated by scripts/generate-license.ts
 * Run `bun scripts/generate-license.ts` after updating licenses.json.
 */
import licenseEntriesJson from "@/assets/data/licenseEntries.json";
import Header from "@/src/presentation/components/Header";
import { useTheme } from "@/src/presentation/hooks/ThemeProvider";
import React, { useMemo, useRef, useState } from "react";
import { ScrollView, TouchableOpacity, View } from "react-native";
import { Typography } from "../src/presentation/components/Typography";

type LicenseEntry = {
    packageName: string;
    licenseType: string;
    licenseText: string;
};

const licenseEntries = licenseEntriesJson as LicenseEntry[];
const ITEMS_PER_PAGE = 100;

export const License: React.FC = () => {
    const { theme } = useTheme();
    const [currentPage, setCurrentPage] = useState(1);
    const scrollViewRef = useRef<ScrollView>(null);

    const totalPages = Math.ceil(licenseEntries.length / ITEMS_PER_PAGE);

    const displayedEntries = useMemo(() => {
        const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;
        const endIndex = startIndex + ITEMS_PER_PAGE;
        return licenseEntries.slice(startIndex, endIndex);
    }, [currentPage]);

    const handlePrevPage = () => {
        if (currentPage > 1) {
            setCurrentPage(currentPage - 1);
            scrollViewRef.current?.scrollTo({ y: 0, animated: true });
        }
    };

    const handleNextPage = () => {
        if (currentPage < totalPages) {
            setCurrentPage(currentPage + 1);
            scrollViewRef.current?.scrollTo({ y: 0, animated: true });
        }
    };

    return (
        <View
            style={{
                flex: 1,
                backgroundColor: theme.colors.background.primary,
            }}
        >
            <Header title="ライセンス情報" shownBackButton />
            <ScrollView ref={scrollViewRef}>
                <View style={{ padding: theme.spacing.lg }}>
                    <View style={{ marginBottom: theme.spacing.lg, alignItems: "center" }}>
                        <Typography variant="body" color={theme.colors.text.secondary}>
                            {currentPage} / {totalPages} ページ ({licenseEntries.length}件中 {(currentPage - 1) * ITEMS_PER_PAGE + 1}-
                            {Math.min(currentPage * ITEMS_PER_PAGE, licenseEntries.length)}件)
                        </Typography>
                    </View>

                    {displayedEntries.map(({ packageName, licenseType, licenseText }) => (
                        <View key={packageName} style={{ marginBottom: theme.spacing.xl }}>
                            <Typography variant="h3" style={{ marginBottom: theme.spacing.xs }}>
                                {packageName}
                            </Typography>
                            <Typography variant="bodySmall" color={theme.colors.text.secondary} style={{ marginBottom: theme.spacing.sm }}>
                                License: {licenseType}
                            </Typography>
                            <Typography variant="bodySmall" color={theme.colors.text.primary} selectable>
                                {licenseText}
                            </Typography>
                        </View>
                    ))}

                    <View
                        style={{
                            flexDirection: "row",
                            justifyContent: "space-between",
                            alignItems: "center",
                            marginTop: theme.spacing.lg,
                            marginBottom: theme.spacing.xl,
                        }}
                    >
                        <TouchableOpacity
                            onPress={handlePrevPage}
                            disabled={currentPage === 1}
                            style={{
                                padding: theme.spacing.md,
                                backgroundColor: currentPage === 1 ? theme.colors.background.secondary : theme.colors.primary.main,
                                borderRadius: 8,
                                minWidth: 100,
                                alignItems: "center",
                            }}
                        >
                            <Typography variant="body" color={currentPage === 1 ? theme.colors.text.disabled : theme.colors.text.inverse}>
                                前のページ
                            </Typography>
                        </TouchableOpacity>

                        <Typography variant="body" color={theme.colors.text.secondary}>
                            {currentPage} / {totalPages}
                        </Typography>

                        <TouchableOpacity
                            onPress={handleNextPage}
                            disabled={currentPage === totalPages}
                            style={{
                                padding: theme.spacing.md,
                                backgroundColor: currentPage === totalPages ? theme.colors.background.secondary : theme.colors.primary.main,
                                borderRadius: 8,
                                minWidth: 100,
                                alignItems: "center",
                            }}
                        >
                            <Typography variant="body" color={currentPage === totalPages ? theme.colors.text.disabled : theme.colors.text.inverse}>
                                次のページ
                            </Typography>
                        </TouchableOpacity>
                    </View>
                </View>
            </ScrollView>
        </View>
    );
};

export default License;
